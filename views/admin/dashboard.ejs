
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Nest Dashboard</title>
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <meta name="description" content="" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta property="og:title" content="" />
        <meta property="og:type" content="" />
        <meta property="og:url" content="" />
        <meta property="og:image" content="" />
        <!-- Favicon -->
        <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg" />
        <!-- Template CSS -->
        <link href="assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
    </head>

    <body>
        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="index.html" class="brand-wrap">
                    <img src="assets/imgs/theme/logo.svg" class="logo" alt="Nest Dashboard" />
                </a>
                <div>
                    <button class="btn btn-icon btn-aside-minimize"><i class="text-muted material-icons md-menu_open"></i></button>
                </div>
            </div>
            <nav>
                <ul class="menu-aside">
                    <li   class="menu-item active"   >
                        <a class="menu-link" href="/admin/dashboard">
                            <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/dashboard">View Dashboard</a>
                           
                        </div>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="/admin/products">
                            <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Products</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/viewProducts">Product List</a>
                           
                        </div>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="/admin/viewUser">
                            <i class="icon material-icons md-person"></i>
                            <span class="text">Users</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/viewUser">Users list </a>
                           
                        </div>
                    </li>
                  
                  
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="/adminordersList">
                            <i class="icon material-icons md-monetization_on"></i>
                            <span class="text">View Orders</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/ordersList">Orders</a>
                            
                        </div>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="#">
                            <i class="icon material-icons md-person"></i>
                            <span class="text">Category</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/category">Category</a>
                           
                        </div>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="/admin/coupons">
                            <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Coupons</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/coupons">Coupons List</a>
                           
                        </div>
                    </li>
                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="">
                            <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Offers</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/offer">Offers List</a>
                            <a href="/admin/referalOffer">Referal Offer</a>
                        </div>
                    </li>
                   <li class="menu-item has-submenu">
                        <a class="menu-link" href="/admin/orderReport">
                            <i class="icon material-icons md-post_add"></i>
                            <span class="text">Report</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/orderReport">Sales Report</a>
                           
                        </div>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/logout">
                            <i class="icon material-icons md-comment"></i>
                            <span class="text">Logout</span>
                        </a>
                    </li>
                   
                </ul>
                <br />
                <br />
            </nav>
        </aside>
        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    
                </div>
                <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"><i class="material-icons md-apps"></i></button>
                    <ul class="nav">
                        <li class="nav-item">
                            <a class="nav-link btn-icon" href="#">
                                <i class="material-icons md-notifications animation-shake"></i>
                                <span class="badge rounded-pill">3</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                        </li>
                        <li class="dropdown nav-item">
                            <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage" aria-expanded="false"><i class="material-icons md-public"></i></a>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                                <a class="dropdown-item text-brand" href="#"><img src="assets/imgs/theme/flag-us.png" alt="English" />English</a>
                                <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-fr.png" alt="Français" />Français</a>
                                <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-jp.png" alt="Français" />日本語</a>
                                <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-cn.png" alt="Français" />中国人</a>
                            </div>
                        </li>
                        <li class="dropdown nav-item">
                            <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="assets/imgs/people/avatar-2.png" alt="User" /></a>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                                <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                                <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                                <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                                <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                                <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item text-danger" href="#"><i class="material-icons md-exit_to_app"></i>Logout</a>
                            </div>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Dashboard</h2>
                        <p>Whole data about your business here</p>
                    </div>
                </div>
               
                <div class="row">
                    <div class="col-xl-12 col-lg-12">
                        <div class="card mb-4">
                            <article class="card-body">
                                <h5 class="card-title">Sale statistics</h5>
                                <div class="row align-items-center">
                            <div class="col-md-3 col-6">
                                <label id="sDateLabel" >Choose Starting </label>
                                 <select id="sDate" class="form-select">
                                    <option  disabled value=""></option>
                                    <% for(let y = 2020; y <= year; y++) { 
                                        if(y == 2020){%>
                                            <option selected value="<%= 2020 %>"><%= 2020 %></option>
                                        <%}else{%>
                                            <option value="<%= y %>"><%= y %></option>
                                        <%}
                                     } %>
                                </select>
                               </div>
                            <div class="col-md-3 col-6">
                                <label id="eDateLabel">Choose Ending </label>
                                <select id="eDate"  class="form-select">
                                    <option disabled value=""></option>
                                    <% for(let y = 2020; y <= year; y++) { 
                                        if(y == year){%>
                                            <option selected value="<%= y %>"><%= y %></option>
                                        <%}else{%>
                                            <option value="<%= y %>"><%= y %></option>
                                        <%}
                                     } %>
                                </select>
                                 </div>
                            <div class="col-md-3 mt-3 col-6">
                            <button class="btn btn-sm font-sm rounded btn-brand" onclick="dateChange()">  Save </button>
                        </div>
                        <div class="col-6 col-md-3">
                            <select  id="select" onchange="selectChenge()" class="form-select border">
                                <option value="Year" selected>Year</option>
                                <option value="Month">Month</option>
                                <option value="Days">Days</option>
                            </select>
                        </div>
                        </div>
                               
                                <div class="col-md-2 col-6 mt-2">
                                   

                                </div>
                                <canvas id="myChart" height="120px" data-db-data="<%= JSON.stringify(dbData) %>" ></canvas>
                             
                            </article>
                        </div>
                      
                    </div>
                   
                    <div class="row">
                        <div class="col-xl-12 col-lg-12">
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="card mb-4">
                                        <article class="card-body">
                                            <h5 class="card-title">TOP 10 SELLING PRODUCTS</h5>
                                            <div class="new-member-list">
                                                <%
                                                if(arrayCount.length>0){
                                                     for(let i=0;i<arrayCount.length;i++){
                                                        %>
                                                        <div class="d-flex align-items-center justify-content-between mb-4">
                                                    <div class="d-flex align-items-center">
                                                        <img src="<%=arrayCount[i].image[0].secure_url%>" alt="" class="avatar" />
                                                        <div>
                                                            <h6><%=arrayCount[i].name%></h6>
                                                          
                                                        </div>
                                                    </div>
                                            </div>
                                                        <%
                                                     }
                                                }else{
                                                   %>
                                                <div class="d-flex align-items-center justify-content-between mb-4">
                                                    <div class="d-flex align-items-center">
                                                        <div>
                                                            <h6>no  iteam</h6>
                                                           
                                                        </div>
                                                    </div>
                                                 </div>
                                                   <% 
                                                }
                                                %>
                                        </article>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="card mb-4">
                                        <article class="card-body">
                                            <h5 class="card-title">TOP 10 SELLING CATEGORY</h5>
                                            <div class="new-member-list">
                                                <%
                                                if(top10Category.length>0){
                                                    for(let i=0;i<top10Category.length;i++){
                                                        %>
                                                      <div class="d-flex align-items-center justify-content-between mb-4">
                                                    <div class="d-flex align-items-center">
                                                        <div>
                                                            <h6><%=top10Category[i].name%></h6>
                                                        </div>
                                                    </div>
                                               </div>
                                                      <%
                                                    } 
                                                }else{
                                                    %>
                                                    <div class="d-flex align-items-center justify-content-between mb-4">
                                                    <div class="d-flex align-items-center">
                                                        <div>
                                                            <h6>No Iteam</h6>
                                                        </div>
                                                    </div>
                                               </div>
                                                    <%
                                                }
                                                %>
                                        </article>
                                    </div>
                                </div>
                              
                            </div>
                        </div>
                    </div>
                </div>
              
             
            </section>
            <!-- content-main end// -->
            <footer class="main-footer font-xs">
                <div class="row pb-30 pt-15">
                    <div class="col-sm-6">
                        <script>
                            document.write(new Date().getFullYear());
                            
                        </script>
                        
                        &copy; Nest - HTML Ecommerce Template .
                    </div>
                    <div class="col-sm-6">
                        <div class="text-sm-end">All rights reserved</div>
                    </div>
                </div>
            </footer>
        </main>
        
        <script>
            function selectChenge() {
                const sDate = document.getElementById("sDate");
                const sDateLabel = document.getElementById("sDateLabel")
                const eDate = document.getElementById("eDate")
                const eDateLabel = document.getElementById("eDateLabel")
                const select = document.getElementById("select");
                const  months =  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                     
                     
                switch (select.value) {
                    case "Year":
                         eDate.style.display = "block"
                         eDateLabel.style.display = "block"
                         sDate.value = 2020 
                         eDateLabel.innerText = "Choose Ending";
                         let options1 = `<option disabled  value=""></option>`;
                        for (let i = 2020; i <= new Date().getFullYear() ; i++) {
                            if(i == new Date().getFullYear()){
                              options1 += `<option selected value="${i}">${i}</option>`;
                            }else{
                                options1 += `<option value="${i}">${i}</option>`;
                            }
                        }
                        eDate.outerHTML = `
                            <select id="eDate" class="form-select">
                                ${options1}
                            </select>
                            `;
                            const newEDate = document.getElementById("eDate");
                            newEDate.value = new Date().getFullYear();
                            
                        break;
                    case "Month":
                        sDate.value = new Date().getFullYear()
                        eDate.style.display = "none"
                        eDateLabel.style.display = "none"
                        break;
                    default:
                        let options = `<option disabled  value=""></option>`;
                        for (let i = 0; i < months.length; i++) {
                            if(months[i] == months[new Date().getMonth()]){
                              options += `<option selected value="${months[i]}">${months[i]}</option>`;
                            }else{
                                options += `<option value="${months[i]}">${months[i]}</option>`;
                            }
                        }
                        eDate.outerHTML = `
                            <select id="eDate" class="form-select">
                                ${options}
                            </select>
                            `;
                        eDateLabel.style.display = "block"
                        sDate.value = new Date().getFullYear()
                        eDateLabel.innerText = "Choose Month";
                        break;
                }
                fetch(`/admin/filterDashboard?select=${select.value}`).then((res)=>res.json())
                .then((res)=>{
                    
                    const existingChart = Chart.getChart('myChart'); // canvas id

                    if (existingChart) {
                      existingChart.destroy();
                    }
                    const ctx = document.getElementById('myChart').getContext('2d');
                    const canvas = document.getElementById('myChart');

                    let years = [];
                    let arrayDelivered ;
                    let arrayreturn ;
                    let arraycanceled ;
                    let arraypending ;
                    
                    switch (select.value) {
                        case "Year":
                            for(let i = sDate.value;i<=new Date().getFullYear();i++){
                                years.push(i*1)
                            }

                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getFullYear(); 
                                    const index = years.indexOf(orderMonth)
                                    const status = product.productStatus;             
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[index]++;
                                            break;
                                        case "return":
                                            arrayreturn[index]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[index]++;
                                            break;
                                        case "pending":
                                            arraypending[index]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }

                            break;
                        case "Month":
                            years = months;

                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getMonth(); 
                                    const status = product.productStatus;  
   
                                               
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[orderMonth]++;
                                            break;
                                        case "return":
                                            arrayreturn[orderMonth]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[orderMonth]++;
                                            break;
                                        case "pending":
                                            arraypending[orderMonth]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }

                            break;
                        default:
                            years = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];
                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getDate(); 
               
                                    const status = product.productStatus;  
   
                                               
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[orderMonth]++;
                                            break;
                                        case "return":
                                            arrayreturn[orderMonth]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[orderMonth]++;
                                            break;
                                        case "pending":
                                            arraypending[orderMonth]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }

                            break;
                    }

                var chart = new Chart(ctx, {
           
                    type: 'line',
                    data: {
                    
                        labels: years,
                        datasets: [{
                                label: 'Delivered',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(44, 120, 220, 0.2)',
                                borderColor: 'rgba(44, 120, 220)',
                                data: arrayDelivered
                            },
                            {
                                label: 'return',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(255, 0, 0, 0.2)',
                                borderColor: 'rgb(255, 0, 0)',
                                data: arrayreturn
                            },
                            {
                                label: 'canceled',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(380, 200, 230, 0.2)',
                                borderColor: 'rgb(380, 200, 230)',
                                data:arraycanceled
                            },
                            {
                                label: 'pending',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(4, 209, 130, 0.2)',
                                borderColor: 'rgb(4, 209, 130)',
                                data: arraypending
                            }

                        ]
                    },
                    options: {
                        plugins: {
                        legend: {
                            labels: {
                            usePointStyle: true,
                            },
                        }
                    }
                    }
                });
                })
            }
        </script>

        <script>

            function dateChange(){
                const sDate = document.getElementById("sDate");
                const eDate = document.getElementById("eDate");
                const select = document.getElementById("select");

                fetch(`/admin/changeDateDashboard?sDate=${sDate?.value}&&eDate=${eDate?.value}&&select=${select?.value}`).then((res)=>res.json())
                .then((res)=>{
                    console.log(res.orderData);
                
                    if(!res.success){
                       Swal.fire({
                            text: res.message,
                            icon: "warning"
                        });
                        return;
                    }
                    let  months =  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                    
                    const existingChart = Chart.getChart('myChart'); // canvas id

                    if (existingChart) {
                      existingChart.destroy();
                    }
                    const ctx = document.getElementById('myChart').getContext('2d');
                    const canvas = document.getElementById('myChart');

                    let years = []
                    let arrayDelivered ;
                    let arrayreturn ;
                    let arraycanceled;
                    let arraypending ;


                     switch (select?.value) {
                        case "Year":
                            for(let i = sDate.value;i<=eDate.value;i++){
                                years.push(i*1)
                            }

                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getFullYear(); 
                                    const index = years.indexOf(orderMonth)
                                    const status = product.productStatus;             
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[index]++;
                                            break;
                                        case "return":
                                            arrayreturn[index]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[index]++;
                                            break;
                                        case "pending":
                                            arraypending[index]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                            
                            break;
                        case "Month":
                            years = months;

                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getMonth(); 
                                    const status = product.productStatus;  
   
                                               
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[orderMonth]++;
                                            break;
                                        case "return":
                                            arrayreturn[orderMonth]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[orderMonth]++;
                                            break;
                                        case "pending":
                                            arraypending[orderMonth]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }

                            break;
                        default:
                            years = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];
                            arrayDelivered = Array(years.length).fill(0);
                            arrayreturn = Array(years.length).fill(0);
                            arraycanceled = Array(years.length).fill(0);
                            arraypending = Array(years.length).fill(0);

                            for (let i = 0; i < res.orderData.length; i++) {
                                for (let j = 0; j < res.orderData[i].products.length; j++) {
                                    const product = res.orderData[i].products[j];
                                    const orderMonth = new Date(res.orderData[i].createdAt).getDate(); 
               
                                    const status = product.productStatus;  
   
                                               
                                    switch (status) {
                                        case "Delivered":
                                            arrayDelivered[orderMonth]++;
                                            break;
                                        case "return":
                                            arrayreturn[orderMonth]++;
                                            break;
                                        case "canceled":
                                            arraycanceled[orderMonth]++;
                                            break;
                                        case "pending":
                                            arraypending[orderMonth]++;
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }

                            break;
                    }










                    // return;
                    // switch (select) {
                    //     case "Year":
                    //         for(let i = sDate*1;i<=eDate;i++){
                    //             years.push(i)
                    //         }
                    //         break;
                    //     case "Month":
                    //         years = months;
                    //         break;
                    //     default:
                    //         break;
                    // }
                    
                    // let arrayDelivered = Array(years.length).fill(0);
                    // let arrayreturn = Array(years.length).fill(0);
                    // let arraycanceled = Array(years.length).fill(0);
                    // let arraypending = Array(years.length).fill(0);
                   
                    // for (let i = 0; i < res.orderData.length; i++) {
                    //     for (let j = 0; j < res.orderData[i].products.length; j++) {
                    //         const product = res.orderData[i].products[j];
                    //         const orderMonth = new Date(res.orderData[i].createdAt).getFullYear(); 
                    //         const index = years.indexOf(orderMonth)
                    //         const status = product.productStatus; 
                            
                                
                    //         switch (status) {
                    //             case "Delivered":
                    //                 arrayDelivered[index]++;
                    //                 break;
                    //             case "return":
                    //                 arrayreturn[index]++;
                    //                 break;
                    //             case "canceled":
                    //                 arraycanceled[index]++;
                    //                 break;
                    //             case "pending":
                    //                 arraypending[index]++;
                    //                 break;
                    //             default:
                    //                 break;
                    //         }
                    //     }
                    // }
                    // let labels = years
                 console.log(arrayDelivered);
                 console.log(arrayreturn);
                 console.log(arraypending);
                 console.log(arraycanceled);
                 console.log(years);
                 
               
                var chart = new Chart(ctx, {
           
                    type: 'line',
                    data: {
                    
                        labels: years,
                        datasets: [{
                                label: 'Delivered',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(44, 120, 220, 0.2)',
                                borderColor: 'rgba(44, 120, 220)',
                                data: arrayDelivered
                            },
                            {
                                label: 'return',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(255, 0, 0, 0.2)',
                                borderColor: 'rgb(255, 0, 0)',
                                data: arrayreturn
                            },
                            {
                                label: 'canceled',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(380, 200, 230, 0.2)',
                                borderColor: 'rgb(380, 200, 230)',
                                data:arraycanceled
                            },
                            {
                                label: 'pending',
                                tension: 0.3,
                                fill: true,
                                backgroundColor: 'rgba(4, 209, 130, 0.2)',
                                borderColor: 'rgb(4, 209, 130)',
                                data: arraypending
                            }

                        ]
                    },
                    options: {
                        plugins: {
                        legend: {
                            labels: {
                            usePointStyle: true,
                            },
                        }
                    }
                    }
                });

                })
            }

        </script>
       
        <script>

    addEventListener("DOMContentLoaded",function(){
        var ctx = document.getElementById('myChart').getContext('2d');
        var canvas = document.getElementById('myChart');
        // Retrieving the data attribute
        var dbDataString = canvas.getAttribute('data-db-data');
        var dbData = JSON.parse(dbDataString);
        var eDate = document.getElementById('eDate');
        var sDate = document.getElementById('sDate');
        const years = []
        for(let i = 2020;i<=new Date().getFullYear();i++){
            years.push(i)
        }
        // const  months =  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        let labels = years

        const arrayDelivered = Array(years.length).fill(0);
        const arrayreturn = Array(years.length).fill(0);
        const arraycanceled = Array(years.length).fill(0);
        const arraypending = Array(years.length).fill(0);
        for (let i = 0; i < dbData.length; i++) {
            for (let j = 0; j < dbData[i].products.length; j++) {
                const product = dbData[i].products[j];
                const orderMonth = new Date(dbData[i].createdAt).getFullYear();
                let index = years.indexOf(orderMonth) 
                const status = product.productStatus; 
               
                
                switch (status) {
                    case "Delivered":
                        arrayDelivered[index]++;
                        break;
                    case "return":
                        arrayreturn[index]++;
                        break;
                    case "canceled":
                        arraycanceled[index]++;
                        break;
                    case "pending":
                        arraypending[index]++;
                        break;
                    default:
                        break;
                }
            }
        }

        var chart = new Chart(ctx, {
           
            type: 'line',
            data: {
              
                labels: labels,
                datasets: [{
                        label: 'Delivered',
                        tension: 0.3,
                        fill: true,
                        backgroundColor: 'rgba(44, 120, 220, 0.2)',
                        borderColor: 'rgba(44, 120, 220)',
                        data: arrayDelivered
                    },
                    {
                        label: 'return',
                        tension: 0.3,
                        fill: true,
                        backgroundColor: 'rgba(255, 0, 0, 0.2)',
                        borderColor: 'rgb(255, 0, 0)',
                        data: arrayreturn
                    },
                    {
                        label: 'canceled',
                        tension: 0.3,
                        fill: true,
                        backgroundColor: 'rgba(380, 200, 230, 0.2)',
                        borderColor: 'rgb(380, 200, 230)',
                        data:arraycanceled
                    },
                    {
                        label: 'pending',
                        tension: 0.3,
                        fill: true,
                        backgroundColor: 'rgba(4, 209, 130, 0.2)',
                        borderColor: 'rgb(4, 209, 130)',
                        data: arraypending
                    }

                ]
            },
            options: {
                plugins: {
                legend: {
                    labels: {
                    usePointStyle: true,
                    },
                 }
              }
            }
        });
    })
   
  
       </script>
        <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
        <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
        <script src="assets/js/vendors/select2.min.js"></script>
        <script src="assets/js/vendors/perfect-scrollbar.js"></script>
        <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
        <script src="assets/js/vendors/chart.js"></script>
        <!-- Main Script -->
        <script src="assets/js/main.js?v=1.1" type="text/javascript"></script>
        <script src="assets/js/custom-chart.js" type="text/javascript"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
       
    </body>
</html>
